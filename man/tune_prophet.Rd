% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_prophet.R
\name{tune_prophet}
\alias{tune_prophet}
\title{Hyperparameter tuning for prophet}
\usage{
tune_prophet(df, horizon, units, args.list, ...)
}
\arguments{
\item{df}{Dataframe containing the history. Must have columns ds (date type) and y,
the time series. If growth is logistic, then df must also have a column cap that
specifies the capacity at each ds. If not provided, then the model object will be
instantiated but not fit; use fit.prophet(m, df) to fit the model.}

\item{horizon}{Integer size of the horizon.}

\item{units}{String unit of the horizon, e.g., "days", "secs".}

\item{args.list}{List of parameters values to be evaluated. Based on \code{prophet}
official documentation, parameters that can be tuned including:
\code{changepoint.prior.scale}, \code{seasonality.prior.scale}, \code{holidays.prior.scale},
\code{seasonality.mode}, and \code{changepoint.range}}

\item{...}{Additional arguments, passed to \link[prophetuneR]{par_cross_validation}}
}
\value{
A dataframe with the parameters and their performance metrics.
}
\description{
Hyperparameter tuning for \link[prophet]{prophet} model via grid search algorithm
using parallelized cross-validation to shorten tuning time
}
\examples{
\dontrun{
  df <- data.frame(
    ds = seq.Date(as.Date('2022-01-01'), as.Date('2022-12-31'), 'day'),
    y = pi*cos(1:365)+rnorm(365))
  tuning_result <- tune_prophet(
    df = df,
    horizon = 30,
    units = 'days',
    args.list = list(
      changepoint.prior.scale = c(0.001, 0.01, 0.1, 0.5),
      seasonality.prior.scale = c(0.01, 0.1, 1.0, 10.0)
    ),
    n.jobs = 2
  )
  print(tuning_result)
}

}
